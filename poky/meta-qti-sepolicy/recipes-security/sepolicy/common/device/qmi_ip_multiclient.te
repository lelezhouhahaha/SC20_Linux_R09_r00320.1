# Copyright (c) 2018, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

policy_module(qmi_ip_multiclient, 1.0)

type embms_device_t;
dev_node(embms_device_t)

type qmi_ip_multiclient_t;
type qmi_ip_multiclient_exec_t;

init_daemon_domain(qmi_ip_multiclient_t, qmi_ip_multiclient_exec_t)
inittab_domtrans(qmi_ip_multiclient_t, qmi_ip_multiclient_exec_t)
logging_send_syslog_msg(qmi_ip_multiclient_t)

userdebug_or_eng(`
    rw_diag_dev(qmi_ip_multiclient_t)
')

corenet_tcp_bind_generic_node(qmi_ip_multiclient_t)
corenet_udp_bind_generic_node(qmi_ip_multiclient_t)
corenet_tcp_bind_all_unreserved_ports(qmi_ip_multiclient_t)
corenet_udp_bind_all_unreserved_ports(qmi_ip_multiclient_t)

qmi_rw_embms_dev(qmi_ip_multiclient_t)

allow qmi_ip_multiclient_t self:capability { net_admin net_raw };
allow qmi_ip_multiclient_t self:fifo_file rw_fifo_file_perms;
allow qmi_ip_multiclient_t self:{ socket netlink_socket udp_socket } create_socket_perms;
allow qmi_ip_multiclient_t self:tcp_socket create_stream_socket_perms;

files_rw_qcmap_etc_data_files(qmi_ip_multiclient_t)

# Manage private files inside /var/run
type qmi_ip_var_run_t;
files_pid_file(qmi_ip_var_run_t)
allow qmi_ip_multiclient_t qmi_ip_var_run_t:file manage_file_perms;
allow qmi_ip_multiclient_t qmi_ip_var_run_t:sock_file manage_sock_file_perms;
manage_dirs_pattern(qmi_ip_multiclient_t, qmi_ip_var_run_t, qmi_ip_var_run_t)
files_pid_filetrans(qmi_ip_multiclient_t, qmi_ip_var_run_t, { file sock_file dir })
allow qmi_ip_multiclient_t self:unix_dgram_socket sendto;

# Copyright (c) 2018, The Linux Foundation. All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#    * Neither the name of The Linux Foundation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

policy_module(leprop, 1.0)

# leprop-service
type leprop_t;
type leprop_exec_t;
init_daemon_domain(leprop_t, leprop_exec_t)
inittab_domtrans(leprop_t, leprop_exec_t)

allow leprop_t self:unix_dgram_socket create_socket_perms;

type leprop_system_data_t;
system_data_files_type(leprop_system_data_t)
manage_system_data_files(leprop_t, leprop_system_data_t)

type leprop_sock_t;
files_type(leprop_sock_t)
dev_node(leprop_sock_t)
leprop_rw_props(leprop_t)
device_manage_socket_file(leprop_t, leprop_sock_t, "leprop-service")

# /var/volatile/tmp/core.leprop-service.*
files_manage_generic_tmp_files(leprop_t)
# proptrigger.conf
files_read_etc_files(leprop_t)

# setprop utility
type setprop_t;
type setprop_exec_t;

init_system_domain(setprop_t, setprop_exec_t)
leprop_rw_props(setprop_t)
alog_rw_log(setprop_t)

allow setprop_t self:unix_dgram_socket create_socket_perms;
allow setprop_t self:capability dac_override;  # TODO: why is this needed?

init_dontaudit_use_fds(setprop_t)
term_dontaudit_use_unallocated_ttys(setprop_t)

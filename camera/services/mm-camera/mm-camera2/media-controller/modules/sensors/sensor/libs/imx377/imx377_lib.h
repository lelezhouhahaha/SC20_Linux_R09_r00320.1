/* imx377_lib.h
 *
 * Copyright (c) 2017 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
*/

#ifndef __IMX377_LIB_H__
#define __IMX377_LIB_H__

#include "sensor_lib.h"
#define SENSOR_MODEL "imx377"

#define REAL_A_GAIN_MAX      22.5
#define REAL_D_GAIN_MAX      7.94
#define REAL_GAIN_SATURATION 1.39
#define REAL_GAIN_PROTECTION 1.40
#define REGISTER_A_GAIN_MAX  0x7A5
#define REGISTER_A_GAIN_MIN  0

#define BP_DT                0x37

/* IMX377 Regs */
#define REG_DIGITAL_GAIN_R  0x3011

/* IMX377 CONSTANTS */
#define IMX377_MIN_AGAIN    1.0f
#define IMX377_MAX_AGAIN    22.5f
#define IMX377_MIN_DGAIN    1.0f
#define IMX377_MAX_DGAIN    8.0f

#define IMX377_MIN_AGAIN_REG_VAL        0 /* 1.0x */
#define IMX377_MAX_AGAIN_REG_VAL        1957 /* 22.5x */

/* IMX377 FORMULAS */
#define IMX377_MIN_GAIN     IMX377_MIN_AGAIN * IMX377_MIN_DGAIN
#define IMX377_MAX_GAIN     IMX377_MAX_AGAIN * IMX377_MAX_DGAIN

#define START_REG_ARRAY \
{ \
  {0x3018, 0xA2, 0x00}, \
  {0x3000, 0x04, 0x00}, \
}

#define STOP_REG_ARRAY \
{ \
  {0x3018, 0xA3, 0x00}, \
  {0x3000, 0x0C, 0x00}, \
}

#define GROUPON_REG_ARRAY \
{ \
  {0x302D, 0x01, 0x00}, \
}

#define GROUPOFF_REG_ARRAY \
{ \
  {0x302D, 0x00, 0x00}, \
}

#define INIT0_REG_ARRAY \
{ \
  {0x3120, 0xF0, 0x00}, \
  {0x3121, 0x00, 0x00}, \
  {0x3122, 0x02, 0x00}, \
  {0x3123, 0x00, 0x00}, \
  {0x3124, 0x00, 0x00}, \
  {0x3125, 0x01, 0x00}, \
  {0x3127, 0x02, 0x00}, \
  {0x3129, 0x90, 0x00}, \
  {0x312A, 0x02, 0x00}, \
  {0x312D, 0x02, 0x00}, \
  {0x3045, 0x32, 0x00}, \
  {0x3003, 0x20, 0x00}, \
  {0x304E, 0x02, 0x00}, \
  {0x3057, 0x4A, 0x00}, \
  {0x3058, 0xF6, 0x00}, \
  {0x3059, 0x00, 0x00}, \
  {0x306B, 0x04, 0x00}, \
  {0x3145, 0x00, 0x00}, \
  {0x3202, 0x63, 0x00}, \
  {0x3203, 0x00, 0x00}, \
  {0x3236, 0x64, 0x00}, \
  {0x3237, 0x00, 0x00}, \
  {0x3304, 0x0B, 0x00}, \
  {0x3305, 0x00, 0x00}, \
  {0x3306, 0x0B, 0x00}, \
  {0x3307, 0x00, 0x00}, \
  {0x337F, 0x64, 0x00}, \
  {0x3380, 0x00, 0x00}, \
  {0x338D, 0x64, 0x00}, \
  {0x338E, 0x00, 0x00}, \
  {0x3510, 0x72, 0x00}, \
  {0x3511, 0x00, 0x00}, \
  {0x3528, 0x0F, 0x00}, \
  {0x3529, 0x0F, 0x00}, \
  {0x352A, 0x0F, 0x00}, \
  {0x352B, 0x0F, 0x00}, \
  {0x3538, 0x0F, 0x00}, \
  {0x3539, 0x13, 0x00}, \
  {0x353C, 0x01, 0x00}, \
  {0x3553, 0x00, 0x00}, \
  {0x3554, 0x00, 0x00}, \
  {0x3555, 0x00, 0x00}, \
  {0x3556, 0x00, 0x00}, \
  {0x3557, 0x00, 0x00}, \
  {0x3558, 0x00, 0x00}, \
  {0x3559, 0x00, 0x00}, \
  {0x355A, 0x00, 0x00}, \
  {0x357D, 0x07, 0x00}, \
  {0x357F, 0x07, 0x00}, \
  {0x3580, 0x04, 0x00}, \
  {0x3583, 0x60, 0x00}, \
  {0x3587, 0x01, 0x00}, \
  {0x3590, 0x0B, 0x00}, \
  {0x3591, 0x00, 0x00}, \
  {0x35BA, 0x0F, 0x00}, \
  {0x366A, 0x0C, 0x00}, \
  {0x366B, 0x0B, 0x00}, \
  {0x366C, 0x07, 0x00}, \
  {0x366D, 0x00, 0x00}, \
  {0x366E, 0x00, 0x00}, \
  {0x366F, 0x00, 0x00}, \
  {0x3670, 0x00, 0x00}, \
  {0x3671, 0x00, 0x00}, \
  {0x3672, 0x00, 0x00}, \
  {0x3673, 0x00, 0x00}, \
  {0x3674, 0xDF, 0x00}, \
  {0x3675, 0x00, 0x00}, \
  {0x3676, 0xA7, 0x00}, \
  {0x3677, 0x01, 0x00}, \
  {0x3687, 0x00, 0x00}, \
  {0x375C, 0x02, 0x00}, \
  {0x380A, 0x0A, 0x00}, \
  {0x382B, 0x16, 0x00}, \
  {0x3000, 0x16, 0x00}, \
  {0x3018, 0xA2, 0x00}, \
  {0x3399, 0x01, 0x00}, \
  {0x310B, 0x11, 0x00}, \
  {0x3A56, 0x00, 0x00}, \
  {0x310B, 0x00, 0x00}, \
  {0x3000, 0x04, 0x00}, \
  {0x3001, 0x10, 0x00}, \
  {0x30F4, 0x00, 0x00}, \
}

#define RES0_REG_ARRAY \
{ \
  {0x302D, 0x01, 0x00}, \
  {0x3004, 0x00, 0x00}, \
  {0x3005, 0x01, 0x00}, \
  {0x3006, 0x01, 0x00}, \
  {0x3007, 0xA0, 0x00}, \
  {0x300B, 0x0C, 0x00}, \
  {0x300C, 0x00, 0x00}, \
  {0x300D, 0x00, 0x00}, \
  {0x300E, 0x00, 0x00}, \
  {0x301A, 0x00, 0x00}, \
  {0x3039, 0x2C, 0x00}, \
  {0x303A, 0x10, 0x00}, \
  {0x303E, 0x6C, 0x00}, \
  {0x303F, 0x00, 0x00}, \
  {0x3040, 0x01, 0x00}, \
  {0x3045, 0x34, 0x00}, \
  {0x3068, 0x00, 0x00}, \
  {0x307E, 0x00, 0x00}, \
  {0x307F, 0x08, 0x00}, \
  {0x30D0, 0x68, 0x00}, \
  {0x30D1, 0x10, 0x00}, \
  {0x30D5, 0x01, 0x00}, \
  {0x30D6, 0x09, 0x00}, \
  {0x30D7, 0x00, 0x00}, \
  {0x30D8, 0x05, 0x00}, \
  {0x30D9, 0x00, 0x00}, \
  {0x30DA, 0x00, 0x00}, \
  {0x30F5, 0xAD, 0x00}, \
  {0x30F6, 0x02, 0x00}, \
  {0x30F7, 0xAF, 0x00}, \
  {0x30F8, 0x0D, 0x00}, \
  {0x30F9, 0x00, 0x00}, \
  {0x312F, 0xE4, 0x00}, \
  {0x3130, 0x0B, 0x00}, \
  {0x3131, 0xD4, 0x00}, \
  {0x3132, 0x0B, 0x00}, \
  {0x30F4, 0x01, 0x00}, \
  {0x3080, 0x00, 0x00}, \
  {0x3081, 0x00, 0x00}, \
  {0x3082, 0x00, 0x00}, \
  {0x3083, 0x00, 0x00}, \
  {0x3084, 0x00, 0x00}, \
  {0x3085, 0x00, 0x00}, \
  {0x3086, 0x00, 0x00}, \
  {0x3087, 0x00, 0x00}, \
  {0x3095, 0x00, 0x00}, \
  {0x3096, 0x00, 0x00}, \
  {0x3097, 0x00, 0x00}, \
  {0x3098, 0x00, 0x00}, \
  {0x3099, 0x00, 0x00}, \
  {0x309A, 0x00, 0x00}, \
  {0x309B, 0x00, 0x00}, \
  {0x309C, 0x00, 0x00}, \
  {0x30BC, 0x00, 0x00}, \
  {0x30BD, 0x00, 0x00}, \
  {0x30BE, 0x00, 0x00}, \
  {0x30BF, 0x00, 0x00}, \
  {0x30C0, 0x00, 0x00}, \
  {0x30C1, 0x00, 0x00}, \
  {0x30C2, 0x00, 0x00}, \
  {0x30C3, 0x00, 0x00}, \
  {0x30C4, 0x00, 0x00}, \
  {0x30C5, 0x00, 0x00}, \
  {0x30C6, 0x00, 0x00}, \
  {0x30C7, 0x00, 0x00}, \
  {0x30C8, 0x00, 0x00}, \
  {0x30C9, 0x00, 0x00}, \
  {0x30CA, 0x00, 0x00}, \
  {0x30CB, 0x00, 0x00}, \
  {0x30CC, 0x00, 0x00}, \
  {0x3A41, 0x10, 0x00}, \
  {0x302D, 0x00, 0x00}, \
  {0x3002, 0x01, 0x00}, \
  {0x30F4, 0x00, 0x00}, \
}

#define RES1_REG_ARRAY \
{ \
  {0x302D, 0x01, 0x00}, \
  {0x3004, 0x45, 0x00}, \
  {0x3005, 0x31, 0x00}, \
  {0x3006, 0x00, 0x00}, \
  {0x3007, 0xA0, 0x00}, \
  {0x300B, 0x08, 0x00}, \
  {0x300C, 0x00, 0x00}, \
  {0x300D, 0x00, 0x00}, \
  {0x300E, 0x00, 0x00}, \
  {0x301A, 0x00, 0x00}, \
  {0x3039, 0x9C, 0x00}, \
  {0x303A, 0x0F, 0x00}, \
  {0x303E, 0x9C, 0x00}, \
  {0x303F, 0x00, 0x00}, \
  {0x3040, 0x01, 0x00}, \
  {0x3045, 0x34, 0x00}, \
  {0x3068, 0x00, 0x00}, \
  {0x307E, 0x00, 0x00}, \
  {0x307F, 0x00, 0x00}, \
  {0x30D0, 0x00, 0x00}, \
  {0x30D1, 0x00, 0x00}, \
  {0x30D5, 0x01, 0x00}, \
  {0x30D6, 0x93, 0x00}, \
  {0x30D7, 0x00, 0x00}, \
  {0x30D8, 0x4A, 0x00}, \
  {0x30D9, 0x00, 0x00}, \
  {0x30DA, 0x04, 0x00}, \
  {0x30F5, 0x04, 0x00}, \
  {0x30F6, 0x01, 0x00}, \
  {0x30F7, 0x03, 0x00}, \
  {0x30F8, 0x09, 0x00}, \
  {0x30F9, 0x00, 0x00}, \
  {0x312F, 0xD8, 0x00}, \
  {0x3130, 0x02, 0x00}, \
  {0x3131, 0xD4, 0x00}, \
  {0x3132, 0x02, 0x00}, \
  {0x30F4, 0x01, 0x00}, \
  {0x3080, 0x00, 0x00}, \
  {0x3081, 0x00, 0x00}, \
  {0x3082, 0x00, 0x00}, \
  {0x3083, 0x00, 0x00}, \
  {0x3084, 0x00, 0x00}, \
  {0x3085, 0x00, 0x00}, \
  {0x3086, 0x00, 0x00}, \
  {0x3087, 0x00, 0x00}, \
  {0x3095, 0x00, 0x00}, \
  {0x3096, 0x00, 0x00}, \
  {0x3097, 0x00, 0x00}, \
  {0x3098, 0x00, 0x00}, \
  {0x3099, 0x00, 0x00}, \
  {0x309A, 0x00, 0x00}, \
  {0x309B, 0x00, 0x00}, \
  {0x309C, 0x00, 0x00}, \
  {0x30BC, 0x00, 0x00}, \
  {0x30BD, 0x00, 0x00}, \
  {0x30BE, 0x00, 0x00}, \
  {0x30BF, 0x00, 0x00}, \
  {0x30C0, 0x00, 0x00}, \
  {0x30C1, 0x00, 0x00}, \
  {0x30C2, 0x00, 0x00}, \
  {0x30C3, 0x00, 0x00}, \
  {0x30C4, 0x00, 0x00}, \
  {0x30C5, 0x00, 0x00}, \
  {0x30C6, 0x00, 0x00}, \
  {0x30C7, 0x00, 0x00}, \
  {0x30C8, 0x00, 0x00}, \
  {0x30C9, 0x00, 0x00}, \
  {0x30CA, 0x00, 0x00}, \
  {0x30CB, 0x00, 0x00}, \
  {0x30CC, 0x00, 0x00}, \
  {0x3A41, 0x04, 0x00}, \
  {0x302D, 0x00, 0x00}, \
  {0x3002, 0x01, 0x00}, \
  {0x30F4, 0x00, 0x00}, \
}

#define RES2_REG_ARRAY \
{ \
  {0x302D, 0x01, 0x00}, \
  {0x3004, 0x08, 0x00}, \
  {0x3005, 0x31, 0x00}, \
  {0x3006, 0x00, 0x00}, \
  {0x3007, 0xA0, 0x00}, \
  {0x300D, 0x04, 0x00}, \
  {0x300E, 0x00, 0x00}, \
  {0x300D, 0x00, 0x00}, \
  {0x300E, 0x00, 0x00}, \
  {0x301A, 0x00, 0x00}, \
  {0x3039, 0xFC, 0x00}, \
  {0x303A, 0x0F, 0x00}, \
  {0x303E, 0x3C, 0x00}, \
  {0x303F, 0x00, 0x00}, \
  {0x3040, 0x01, 0x00}, \
  {0x3045, 0x34, 0x00}, \
  {0x3068, 0x00, 0x00}, \
  {0x307E, 0x00, 0x00}, \
  {0x307F, 0x00, 0x00}, \
  {0x30D0, 0x00, 0x00}, \
  {0x30D1, 0x00, 0x00}, \
  {0x30D5, 0x01, 0x00}, \
  {0x30D6, 0x80, 0x00}, \
  {0x30D7, 0x00, 0x00}, \
  {0x30D8, 0x40, 0x00}, \
  {0x30D9, 0x00, 0x00}, \
  {0x30DA, 0x05, 0x00}, \
  {0x30F5, 0x04, 0x00}, \
  {0x30F6, 0x01, 0x00}, \
  {0x30F7, 0x81, 0x00}, \
  {0x30F8, 0x04, 0x00}, \
  {0x30F9, 0x00, 0x00}, \
  {0x312F, 0xFC, 0x00}, \
  {0x3130, 0x02, 0x00}, \
  {0x3131, 0xF8, 0x00}, \
  {0x3132, 0x02, 0x00}, \
  {0x30F4, 0x01, 0x00}, \
  {0x3080, 0x00, 0x00}, \
  {0x3081, 0x00, 0x00}, \
  {0x3082, 0x00, 0x00}, \
  {0x3083, 0x00, 0x00}, \
  {0x3084, 0x00, 0x00}, \
  {0x3085, 0x00, 0x00}, \
  {0x3086, 0x00, 0x00}, \
  {0x3087, 0x00, 0x00}, \
  {0x3095, 0x00, 0x00}, \
  {0x3096, 0x00, 0x00}, \
  {0x3097, 0x00, 0x00}, \
  {0x3098, 0x00, 0x00}, \
  {0x3099, 0x00, 0x00}, \
  {0x309A, 0x00, 0x00}, \
  {0x309B, 0x00, 0x00}, \
  {0x309C, 0x00, 0x00}, \
  {0x30BC, 0x00, 0x00}, \
  {0x30BD, 0x00, 0x00}, \
  {0x30BE, 0x00, 0x00}, \
  {0x30BF, 0x00, 0x00}, \
  {0x30C0, 0x00, 0x00}, \
  {0x30C1, 0x00, 0x00}, \
  {0x30C2, 0x00, 0x00}, \
  {0x30C3, 0x00, 0x00}, \
  {0x30C4, 0x00, 0x00}, \
  {0x30C5, 0x00, 0x00}, \
  {0x30C6, 0x00, 0x00}, \
  {0x30C7, 0x00, 0x00}, \
  {0x30C8, 0x00, 0x00}, \
  {0x30C9, 0x00, 0x00}, \
  {0x30CA, 0x00, 0x00}, \
  {0x30CB, 0x00, 0x00}, \
  {0x30CC, 0x00, 0x00}, \
  {0x3A41, 0x04, 0x00}, \
  {0x302D, 0x00, 0x00}, \
  {0x3002, 0x01, 0x00}, \
  {0x30F4, 0x00, 0x00}, \
}

/* 4000x3000 @ 30fps*/
#define RES3_REG_ARRAY \
{ \
  {0x3004, 0x00, 0x00}, \
  {0x3005, 0x01, 0x00}, \
  {0x3006, 0x00, 0x00}, \
  {0x3007, 0xA0, 0x00}, \
  {0x3039, 0x00, 0x00}, \
  {0x303A, 0x00, 0x00}, \
  {0x303E, 0x00, 0x00}, \
  {0x303F, 0x00, 0x00}, \
  {0x3040, 0x00, 0x00}, \
  {0x3045, 0x40, 0x00}, \
  {0x3068, 0x00, 0x00}, \
  {0x307E, 0x00, 0x00}, \
  {0x307F, 0x00, 0x00}, \
  {0x3080, 0x00, 0x00}, \
  {0x3081, 0x00, 0x00}, \
  {0x3082, 0x00, 0x00}, \
  {0x3083, 0x00, 0x00}, \
  {0x3084, 0x00, 0x00}, \
  {0x3085, 0x00, 0x00}, \
  {0x3086, 0x00, 0x00}, \
  {0x3087, 0x00, 0x00}, \
  {0x3095, 0x00, 0x00}, \
  {0x3096, 0x00, 0x00}, \
  {0x3097, 0x00, 0x00}, \
  {0x3098, 0x00, 0x00}, \
  {0x3099, 0x00, 0x00}, \
  {0x309A, 0x00, 0x00}, \
  {0x309B, 0x00, 0x00}, \
  {0x309C, 0x00, 0x00}, \
  {0x30BC, 0x00, 0x00}, \
  {0x30BD, 0x00, 0x00}, \
  {0x30BE, 0x00, 0x00}, \
  {0x30BF, 0x00, 0x00}, \
  {0x30C0, 0x00, 0x00}, \
  {0x30C1, 0x00, 0x00}, \
  {0x30C2, 0x00, 0x00}, \
  {0x30C3, 0x00, 0x00}, \
  {0x30C4, 0x00, 0x00}, \
  {0x30C5, 0x00, 0x00}, \
  {0x30C6, 0x00, 0x00}, \
  {0x30C7, 0x00, 0x00}, \
  {0x30C8, 0x00, 0x00}, \
  {0x30C9, 0x00, 0x00}, \
  {0x30CA, 0x00, 0x00}, \
  {0x30CB, 0x00, 0x00}, \
  {0x30CC, 0x00, 0x00}, \
  {0x30D0, 0x00, 0x00}, \
  {0x30D1, 0x00, 0x00}, \
  {0x30D5, 0x00, 0x00}, \
  {0x30D6, 0x00, 0x00}, \
  {0x30D7, 0x00, 0x00}, \
  {0x30D8, 0x00, 0x00}, \
  {0x30D9, 0x00, 0x00}, \
  {0x30DA, 0x00, 0x00}, \
  {0x30EE, 0x01, 0x00}, \
  {0x30F5, 0x30, 0x00}, \
  {0x30F6, 0x02, 0x00}, \
  {0x30F7, 0xC2, 0x00}, \
  {0x30F8, 0x10, 0x00}, \
  {0x30F9, 0x00, 0x00}, \
  {0x312F, 0xF6, 0x00}, \
  {0x3130, 0x0B, 0x00}, \
  {0x3131, 0xE6, 0x00}, \
  {0x3132, 0x0B, 0x00}, \
  {0x3A41, 0x10, 0x00}, \
}

/* 3840x2160 @ 60fps */
#define RES4_REG_ARRAY \
{ \
  {0x3004, 0x19, 0x00}, \
  {0x3005, 0x01, 0x00}, \
  {0x3006, 0x04, 0x00}, \
  {0x3007, 0xA0, 0x00}, \
  {0x3039, 0x00, 0x00}, \
  {0x303A, 0x00, 0x00}, \
  {0x303E, 0x00, 0x00}, \
  {0x303F, 0x00, 0x00}, \
  {0x3040, 0x00, 0x00}, \
  {0x3045, 0x40, 0x00}, \
  {0x3068, 0x00, 0x00}, \
  {0x307E, 0x00, 0x00}, \
  {0x307F, 0x08, 0x00}, \
  {0x3080, 0x00, 0x00}, \
  {0x3081, 0x00, 0x00}, \
  {0x3082, 0x00, 0x00}, \
  {0x3083, 0x00, 0x00}, \
  {0x3084, 0x00, 0x00}, \
  {0x3085, 0x00, 0x00}, \
  {0x3086, 0x00, 0x00}, \
  {0x3087, 0x00, 0x00}, \
  {0x3095, 0x00, 0x00}, \
  {0x3096, 0x00, 0x00}, \
  {0x3097, 0x00, 0x00}, \
  {0x3098, 0x00, 0x00}, \
  {0x3099, 0x00, 0x00}, \
  {0x309A, 0x00, 0x00}, \
  {0x309B, 0x00, 0x00}, \
  {0x309C, 0x00, 0x00}, \
  {0x30BC, 0x00, 0x00}, \
  {0x30BD, 0x00, 0x00}, \
  {0x30BE, 0x00, 0x00}, \
  {0x30BF, 0x00, 0x00}, \
  {0x30C0, 0x00, 0x00}, \
  {0x30C1, 0x00, 0x00}, \
  {0x30C2, 0x00, 0x00}, \
  {0x30C3, 0x00, 0x00}, \
  {0x30C4, 0x00, 0x00}, \
  {0x30C5, 0x00, 0x00}, \
  {0x30C6, 0x00, 0x00}, \
  {0x30C7, 0x00, 0x00}, \
  {0x30C8, 0x00, 0x00}, \
  {0x30C9, 0x00, 0x00}, \
  {0x30CA, 0x00, 0x00}, \
  {0x30CB, 0x00, 0x00}, \
  {0x30CC, 0x00, 0x00}, \
  {0x30D0, 0x48, 0x00}, \
  {0x30D1, 0x0F, 0x00}, \
  {0x30D5, 0x00, 0x00}, \
  {0x30D6, 0x00, 0x00}, \
  {0x30D7, 0x00, 0x00}, \
  {0x30D8, 0x00, 0x00}, \
  {0x30D9, 0x00, 0x00}, \
  {0x30DA, 0x00, 0x00}, \
  {0x30EE, 0x01, 0x00}, \
  {0x30F5, 0x10, 0x00}, \
  {0x30F6, 0x02, 0x00}, \
  {0x30F7, 0xE3, 0x00}, \
  {0x30F8, 0x08, 0x00}, \
  {0x30F9, 0x00, 0x00}, \
  {0x312F, 0x86, 0x00}, \
  {0x3130, 0x08, 0x00}, \
  {0x3131, 0x7E, 0x00}, \
  {0x3132, 0x08, 0x00}, \
  {0x3A41, 0x08, 0x00}, \
}

/* Sensor Handler */
static sensor_lib_t sensor_lib_ptr =
{
  .sensor_slave_info =
  {
    .sensor_name = SENSOR_MODEL,
    .slave_addr = 0x34,
    .i2c_freq_mode = SENSOR_I2C_MODE_FAST,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .sensor_id_info =
    {
      .sensor_id_reg_addr = 0x3044,
      .sensor_id = 0x0032,
    },
    .power_setting_array =
    {
      .power_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_HIGH,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 24000000,
          .delay = 1,
        },
      },
      .size = 6,
      .power_down_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_HIGH,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
      },
      .size_down = 6,
    },
  },
  .sensor_output =
  {
    .output_format = SENSOR_BAYER,
    .connection_mode = SENSOR_MIPI_CSI,
    .raw_output = SENSOR_12_BIT_DIRECT,
    .filter_arrangement = SENSOR_RGGB,
  },
  .output_reg_addr =
  {
    .frame_length_lines = 0x30F7,
  },
  .exp_gain_info =
  {
    .coarse_int_time_addr = 0x300B,
    .global_gain_addr = 0x3009,
    .vert_offset = 8,
  },
  .aec_info =
  {
    .min_gain = REAL_GAIN_PROTECTION,
    .max_gain = REAL_A_GAIN_MAX * REAL_D_GAIN_MAX,
    .max_analog_gain = REAL_A_GAIN_MAX,
    .max_linecount = 65527,
  },
  .sensor_num_frame_skip = 1,
  .sensor_num_HDR_frame_skip = 0,
  .sensor_max_pipeline_frame_delay = 2,
  .sensor_property =
  {
    .pix_size = 1.55, /* um */
    .sensing_method = SENSOR_SMETHOD_NOT_DEFINED,
    .crop_factor = 1.0,
  },
  .pixel_array_size_info =
  {
    .active_array_size =
    {
      .width = 4032,
      .height = 3024,
    },
    .left_dummy = 48,
    .right_dummy = 0,
    .top_dummy = 2,
    .bottom_dummy = 2,
  },
  .color_level_info =
  {
    .white_level = 1023,
    .r_pedestal = 52,
    .gr_pedestal = 52,
    .gb_pedestal = 52,
    .b_pedestal = 52,
  },
  .sensor_stream_info_array =
  {
    .sensor_stream_info =
    {
      {
        .vc_cfg_size = 2,
        .vc_cfg =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = BP_DT,
            .decode_format = CSI_DECODE_10BIT
          },
        },
        .pix_data_fmt =
        {
          SENSOR_BAYER,
          SENSOR_META,
        },
      },
      {
        .vc_cfg_size = 1,
        .vc_cfg =
        {
          {
            .cid = 2,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT
          },
        },
        .pix_data_fmt =
        {
          SENSOR_META,
        },
      },
    },
    .size = 2,
  },
  .start_settings =
  {
    .reg_setting_a = START_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .stop_settings =
  {
    .reg_setting_a = STOP_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupon_settings =
  {
    .reg_setting_a = GROUPON_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupoff_settings =
  {
    .reg_setting_a = GROUPOFF_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .test_pattern_info =
  {
    .test_pattern_settings =
    {
      {
        .mode = SENSOR_TEST_PATTERN_OFF,
        .settings =
        {
          .reg_setting_a =
           {
            {0x303B, 0x00, 0x00},
            {0x303C, 0x00, 0x00},
           },
          .size = 2,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_COLOR_BARS,
        .settings =
        {
          .reg_setting_a =
           {
            {0x303B, 0x11, 0x00},
            {0x303C, 0x0A, 0x00},//vertical bar
           },
          .size = 2,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_PN9,
        .settings =
        {
          .reg_setting_a =
           {
            {0x303B, 0x11, 0x00},
            {0x303C, 0x02, 0x00},//repeat L-H
           },
          .size = 2,
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        },
      },
    },
    .size = 3,
    /* due to no solid test pattern is defined */
    .solid_mode_addr =
    {
      .r_addr = 0x00,
      .gr_addr = 0x00,
      .gb_addr = 0x00,
      .b_addr = 0x00,
    },
  },
  .init_settings_array =
  {
    .reg_settings =
    {
      {
        .reg_setting_a = INIT0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 1,
  },
  .res_settings_array =
  {
    .reg_settings =
    {
      /* Res 0 */
      {
        .reg_setting_a = RES0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 4 */
      {
        .reg_setting_a = RES4_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 1 */
      {
        .reg_setting_a = RES1_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 2 */
      {
        .reg_setting_a = RES2_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 4,
  },
  .out_info_array =
  {
    .out_info =
    {
      /* Res 0 */
      /*  still mode */
     {
        .x_output = 4080,
        .y_output = 3028,
        .line_length_pclk = 685,
        .frame_length_lines = 3503,
        .op_pixel_clk = 461000000,
        .binning_factor = 1,
        .min_fps = 15,
        .max_fps = 30,
        .mode = SENSOR_DEFAULT_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 0,
        .is_pdaf_supported = 1,
      },
      /* Res 4 */
      {
        .x_output = 3912,
        .y_output = 2174,
        .line_length_pclk = 528,
        .frame_length_lines = 2275,
        .op_pixel_clk = 461000000,
        .binning_factor = 1,
        .min_fps = 7.5,
        .max_fps = 60.0,
        .mode = SENSOR_HFR_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 0,
        .is_pdaf_supported = 1,
      },
      /* Res 1 */
      /* hfr video mode */
      {
        .x_output = 1296,
        .y_output = 724,
        .line_length_pclk = 260,
        .frame_length_lines = 2307,
        .op_pixel_clk = 461000000,
        .binning_factor = 1,
        .min_fps = 120.0,
        .max_fps = 120.0,
        .mode = SENSOR_HFR_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 0,
        .is_pdaf_supported = 1,
      },
      /* Res 2 */
      /* hfr video mode */
      {
        .x_output = 1360,
        .y_output = 760,
        .line_length_pclk = 260,
        .frame_length_lines = 1153,
        .op_pixel_clk = 461000000,
        .binning_factor = 1,
        .min_fps = 240.0,
        .max_fps = 240.0,
        .mode = SENSOR_HFR_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 0,
        .is_pdaf_supported = 1,
      },
    },
    .size = 4,
  },
  .csi_params =
  {
    .lane_cnt = 4,
    .settle_cnt = 0xE,
    .is_csi_3phase = 0,
  },
  .csid_lut_params_array =
  {
    .lut_params =
    {
      /* Res 0 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = BP_DT,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 2,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT
          },
        },
      },
      /* Res 4 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = BP_DT,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 2,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT
          },
        },
      },
      /* Res 1 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = BP_DT,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 2,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT
          },
        },
      },
      /* Res 2 */
      {
        .num_cid = 3,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 1,
            .dt = BP_DT,
            .decode_format = CSI_DECODE_10BIT
          },
          {
            .cid = 2,
            .dt = CSI_EMBED_DATA,
            .decode_format = CSI_DECODE_8BIT
          },
        },
      },
    },
    .size = 4,
  },
  .crop_params_array =
  {
    .crop_params =
    {
      /* Res 0 */
      {
        .top_crop = 2,
        .bottom_crop = 2,
        .left_crop = 48,
        .right_crop = 0,
      },
      /* Res 4 */
      {
        .top_crop = 2,
        .bottom_crop = 2,
        .left_crop = 48,
        .right_crop = 0,
      },
      /* Res 1 */
      {
        .top_crop = 2,
        .bottom_crop = 2,
        .left_crop = 16,
        .right_crop = 0,
      },
      /* Res 2 */
      {
        .top_crop = 2,
        .bottom_crop = 2,
        .left_crop = 16,
        .right_crop = 0,
      },
    },
    .size = 4,
  },
  .exposure_func_table =
  {
    .sensor_calculate_exposure = sensor_calculate_exposure,
    .sensor_fill_exposure_array = sensor_fill_exposure_array,
  },
  .meta_data_out_info_array =
  {
    .meta_data_out_info =
    {
      {
        .width = 0,
        .height = 16,
        .stats_type = 2, //BP_STATS
        .dt = BP_DT,
      },
    },
    .size = 1,
  },
  .sensor_capability = 0,
  .awb_func_table =
  {
    .sensor_fill_awb_array = 0,
    .awb_table_size = 0,
  },
  .parse_RDI_stats =
  {
    .parse_VHDR_stats = NULL,
    .parse_PDAF_stats = NULL,
  },
  .rolloff_config =
  {
    .enable = FALSE,
    .full_size_info =
    {
      .full_size_width = 0,
      .full_size_height = 0,
      .full_size_left_crop = 0,
      .full_size_top_crop = 0,
    },
  },
  .adc_readout_time = 8750,
  .sensor_num_fast_aec_frame_skip = 0,
  .noise_coeff = {
    .gradient_S = 1.902395e-06,
    .offset_S = 1.649218e-05,
    .gradient_O = 2.362977e-11,
    .offset_O = 1.584547e-06,
  },
};

#endif /* __IMX377_LIB_H__ */

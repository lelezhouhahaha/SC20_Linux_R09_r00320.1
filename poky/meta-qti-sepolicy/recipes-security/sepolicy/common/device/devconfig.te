# Copyright (c) 2018, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

policy_module(devconfig , 1.0)

########################################
#
# Declarations
#

type devconfig_t;
type devconfig_exec_t;

gen_require(`
	type tmp_t, var_t;
	type persist_t;

	# for leprop
	type socket_device_t;
')

init_system_domain(devconfig_t, devconfig_exec_t)

# to run from /sbin/sh (which goes to /bin/busybox) ?
corecmd_exec_bin(devconfig_t)

dev_read_urand(devconfig_t)
corecmd_exec_shell(devconfig_t)

## /proc/cmdline
kernel_read_system_state(devconfig_t)

## /sys/class/net/wlan0/..
dev_read_sysfs(devconfig_t)

## load wlan to get MAC address
wlan_start_stop(devconfig_t)

## /persist/device.conf
create_files_pattern(devconfig_t, persist_t, persist_t)
rename_files_pattern(devconfig_t, persist_t, persist_t)
rw_files_pattern(devconfig_t, persist_t, persist_t)
delete_files_pattern(devconfig_t, persist_t, persist_t)

allow devconfig_t self:fifo_file { read write ioctl getattr };

## /tmp read,write,delete files
files_manage_generic_tmp_files(devconfig_t)
files_manage_generic_tmp_dirs(devconfig_t)
files_delete_tmp_dir_entry(devconfig_t)
create_files_pattern(devconfig_t, tmp_t, tmp_t)
manage_files_pattern(devconfig_t, tmp_t, tmp_t)
manage_files_pattern(devconfig_t, var_t, var_t)


leprop_rw_props(devconfig_t)
allow devconfig_t self:unix_dgram_socket create;
allow devconfig_t socket_device_t:dir search;


files_rw_qcmap_etc_data_files(devconfig_t)
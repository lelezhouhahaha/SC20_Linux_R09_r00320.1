diff --git a/usrsctplib/user_socket.c b/usrsctplib/user_socket.c
index af599f6..607243d 100755
--- a/usrsctplib/user_socket.c
+++ b/usrsctplib/user_socket.c
@@ -2035,7 +2035,7 @@ soconnect(struct socket *so, struct sockaddr *nam)
 
 
 
-int user_connect(struct socket *so, struct sockaddr *sa)
+int user_connect(struct socket *so, struct sockaddr *sa, const struct timespec *abstime)
 {
 	int error;
 	int interrupted = 0;
@@ -2066,7 +2066,12 @@ int user_connect(struct socket *so, struct sockaddr *sa)
 		else
 			error = -1;
 #else
-		error = pthread_cond_wait(SOCK_COND(so), SOCK_MTX(so));
+		if (!abstime) {
+			error = pthread_cond_wait(SOCK_COND(so), SOCK_MTX(so));
+		} else {
+			error = pthread_cond_timedwait(SOCK_COND(so), SOCK_MTX(so), abstime);
+		}
+
 #endif
 		if (error) {
 #if defined(__Userspace_os_NetBSD)
@@ -2098,7 +2103,8 @@ done1:
 	return (error);
 }
 
-int usrsctp_connect(struct socket *so, struct sockaddr *name, int namelen)
+
+int usrsctp_connect_timeout(struct socket *so, struct sockaddr *name, int namelen, const struct timespec *abstime)
 {
 	struct sockaddr *sa;
 
@@ -2106,7 +2112,7 @@ int usrsctp_connect(struct socket *so, struct sockaddr *name, int namelen)
 	if (errno)
 		return (-1);
 
-	errno = user_connect(so, sa);
+	errno = user_connect(so, sa, abstime);
 	FREE(sa, M_SONAME);
 	if (errno) {
 		return (-1);
@@ -2115,6 +2121,11 @@ int usrsctp_connect(struct socket *so, struct sockaddr *name, int namelen)
 	}
 }
 
+int usrsctp_connect(struct socket *so, struct sockaddr *name, int namelen)
+{
+	return usrsctp_connect_timeout(so, name, namelen, NULL);
+}
+
 int userspace_connect(struct socket *so, struct sockaddr *name, int namelen)
 {
 	return (usrsctp_connect(so, name, namelen));
diff --git a/usrsctplib/usrsctp.h b/usrsctplib/usrsctp.h
index bd6c2fe..fdd2152 100644
--- a/usrsctplib/usrsctp.h
+++ b/usrsctplib/usrsctp.h
@@ -948,6 +948,12 @@ usrsctp_connect(struct socket *so,
                 socklen_t namelen);
 
 int
+usrsctp_connect_timeout(struct socket *so,
+                struct sockaddr *name,
+                socklen_t namelen, const struct timespec *abstime);
+
+
+int
 usrsctp_connectx(struct socket *so,
                  const struct sockaddr *addrs, int addrcnt,
                  sctp_assoc_t *id);

From b592926f8c1b1c0fb2a4fee2f6270feefb7a0cb8 Mon Sep 17 00:00:00 2001
From: Chapin Fang <chapin.fang@quectel.com>
Date: Sat, 22 Feb 2020 15:38:06 +0800
Subject: [PATCH] =?UTF-8?q?SC20=5FR09=5Flinux:Chapin:Multimedia:=E8=A7=A3?=
 =?UTF-8?q?=E5=86=B3gstreamer=20omx=E4=B8=AD=E4=BD=BF=E7=94=A8h264enc?=
 =?UTF-8?q?=E9=97=AE=E9=A2=98?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

详述更改原因：解决gstreamer omx中使用h264enc问题
修改点分类  ：内部缺陷修改
适用哪些项目：该项目
详述更改内容：解决gstreamer omx中使用h264enc问题
详述测试方法：无
软测测试方法：无
硬测测试方法：无
---
 omx/gstomxh264enc.c     | 11 +++++++++++
 omx/gstomxvideoenc.c    |  1 +
 omx/openmax/OMX_Video.h |  1 +
 3 files changed, 13 insertions(+)

diff --git a/omx/gstomxh264enc.c b/omx/gstomxh264enc.c
index aa33ae599..b3bdd9944 100755
--- a/omx/gstomxh264enc.c
+++ b/omx/gstomxh264enc.c
@@ -226,6 +226,7 @@ gst_omx_h264_enc_set_format (GstOMXVideoEnc * enc, GstOMXPort * port,
   OMX_PARAM_PORTDEFINITIONTYPE port_def;
   OMX_VIDEO_PARAM_PROFILELEVELTYPE param;
   OMX_VIDEO_CONFIG_AVCINTRAPERIOD config_avcintraperiod;
+  GstVideoInfo *info = &state->info;
 #ifdef USE_OMX_TARGET_RPI
   OMX_CONFIG_PORTBOOLEANTYPE config_inline_header;
 #endif
@@ -310,6 +311,11 @@ gst_omx_h264_enc_set_format (GstOMXVideoEnc * enc, GstOMXPort * port,
   gst_omx_port_get_port_definition (GST_OMX_VIDEO_ENC (self)->enc_out_port,
       &port_def);
   port_def.format.video.eCompressionFormat = OMX_VIDEO_CodingAVC;
+//add by chapin to set avc enc output port nFrameWidth & nFrameHeight, msm_vidc will compare with input port nFrameWidthxnFrameHeight
+  GST_DEBUG_OBJECT (self, "Setting output port nFrameWidth = %d nFrameHeight = %d", info->width, info->height);
+  port_def.format.video.nFrameWidth = info->width;
+  port_def.format.video.nFrameHeight = info->height;
+
   err =
       gst_omx_port_update_port_definition (GST_OMX_VIDEO_ENC
       (self)->enc_out_port, &port_def);
@@ -394,6 +400,8 @@ gst_omx_h264_enc_set_format (GstOMXVideoEnc * enc, GstOMXPort * port,
         param.eLevel = OMX_VIDEO_AVCLevel5;
       } else if (g_str_equal (level_string, "5.1")) {
         param.eLevel = OMX_VIDEO_AVCLevel51;
+      } else if (g_str_equal (level_string, "5.2")) {  //OMX avc use 5.2 defalut
+        param.eLevel = OMX_VIDEO_AVCLevel52;
       } else {
         goto unsupported_level;
       }
@@ -528,6 +536,9 @@ gst_omx_h264_enc_get_caps (GstOMXVideoEnc * enc, GstOMXPort * port,
       case OMX_VIDEO_AVCLevel51:
         level = "5.1";
         break;
+      case OMX_VIDEO_AVCLevel52:
+        level = "5.2";
+        break;
       default:
         g_assert_not_reached ();
         return NULL;
diff --git a/omx/gstomxvideoenc.c b/omx/gstomxvideoenc.c
index c54d8a78e..7f7581e1e 100755
--- a/omx/gstomxvideoenc.c
+++ b/omx/gstomxvideoenc.c
@@ -1075,6 +1075,7 @@ gst_omx_video_enc_set_format (GstVideoEncoder * encoder,
 
     case OMX_COLOR_FormatYUV420PackedSemiPlanar:
     case OMX_COLOR_FormatYUV420SemiPlanar:
+    case OMX_QCOM_COLOR_FormatYUV420PackedSemiPlanar32m: //add by chapin for omx h264 enc color format
       port_def.nBufferSize =
           (port_def.format.video.nStride * port_def.format.video.nFrameHeight) +
           (port_def.format.video.nStride *
diff --git a/omx/openmax/OMX_Video.h b/omx/openmax/OMX_Video.h
index 163e45081..4628c17d5 100755
--- a/omx/openmax/OMX_Video.h
+++ b/omx/openmax/OMX_Video.h
@@ -798,6 +798,7 @@ typedef enum OMX_VIDEO_AVCLEVELTYPE {
     OMX_VIDEO_AVCLevel42  = 0x2000,   /**< Level 4.2 */
     OMX_VIDEO_AVCLevel5   = 0x4000,   /**< Level 5 */
     OMX_VIDEO_AVCLevel51  = 0x8000,   /**< Level 5.1 */
+    OMX_VIDEO_AVCLevel52  = 0x10000,   /**< Level 5.2 */
     OMX_VIDEO_AVCLevelKhronosExtensions = 0x6F000000, /**< Reserved region for introducing Khronos Standard Extensions */ 
     OMX_VIDEO_AVCLevelVendorStartUnused = 0x7F000000, /**< Reserved region for introducing Vendor Extensions */
     OMX_VIDEO_AVCLevelMax = 0x7FFFFFFF  
-- 
2.23.0


#Copyright (c) 2018, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

policy_module(qti-audio-server-daemon, 1.0)

########################################
#
# Declarations
#

type audio-server-daemon_t;
type audio-server-daemon_exec_t;

init_daemon_domain(audio-server-daemon_t, audio-server-daemon_exec_t)

userdebug_or_eng(`
  kernel_search_debugfs(audio-server-daemon_t);
  rw_diag_dev(audio-server-daemon_t);
')

gen_require(`
         type tracefs_t;
         type trace_marker_t;
         type alogd_t;
	 type ion_device_t;
	 type tmp_t;
    ')

dev_write_sound(audio-server-daemon_t)
dev_read_sound(audio-server-daemon_t)
dev_read_sysfs(audio-server-daemon_t)
files_read_etc_files(audio-server-daemon_t)
kernel_read_system_state(audio-server-daemon_t)
read_firmware_file(audio-server-daemon_t)
servicemanager_binder_use(audio-server-daemon_t)
leprop_read_props(audio-server-daemon_t)
leprop_rw_props(audio-server-daemon_t)
alog_rw_log(audio-server-daemon_t)
allow audio-server-daemon_t self:unix_dgram_socket { create connect write};
allow audio-server-daemon_t self:process { signal };
allow audio-server-daemon_t self:capability { sys_nice };
allow audio-server-daemon_t self:process { setsched };
allow audio-server-daemon_t alogd_t:dir search;
allow audio-server-daemon_t tracefs_t:dir search;
allow audio-server-daemon_t trace_marker_t:file { write open };
allow audio-server-daemon_t self:process { signal_perms getsched setsched };
allow audio-server-daemon_t tracefs_t:filesystem mount;

userdebug_or_eng(`
    gen_require(`
        type unconfined_t;
    ')
    allow audio-server-daemon_t unconfined_t:binder call;
    allow audio-server-daemon_t unconfined_t:fd use;
    allow audio-server-daemon_t device_t:chr_file { read write open ioctl };
')

dontaudit audio-server-daemon_t self:capability dac_override;

#added by peeta
allow audio-server-daemon_t initrc_t:binder call;
allow audio-server-daemon_t ion_device_t:chr_file read;
allow audio-server-daemon_t tmp_t:lnk_file read;


# Copyright (c) 2017-2018, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

fs_relabelfrom_firmware(mount_t)
fs_relabelfrom_dsp(mount_t)

data_mount_volatile_bind(mount_t)

# /dev/ubi*
device_read_ubi_device(mount_t)

### mount-copybind ###

type mount_copybind_t;
type mount_copybind_exec_t;
init_system_domain(mount_copybind_t, mount_copybind_exec_t)
term_use_all_terms(mount_copybind_t)
kernel_read_system_state(mount_copybind_t)
allow mount_copybind_t self:process setfscreate;

# Copy files from /etc to /systemrw
corecmd_exec_bin(mount_copybind_t)
files_read_etc_files(mount_copybind_t)
data_manage_generic_system_files(mount_copybind_t)
relabel_all_data_files(mount_copybind_t)

allow mount_copybind_t  self:capabilityÂ { chown fowner fsetid };

# Perform a bind mount with the real mount context
mount_domtrans(mount_copybind_t)
files_read_alexa_data_files(mount_copybind_t)

# Files made writable using mount-copybind must have a unique label
gen_require(`
    type etc_t;
')
neverallow mount_copybind_t etc_t:file { create relabelto };
fs_blk_getattr_tmpfs(mount_t)

userdebug_or_eng(`
    # TODO: Transition the login shells to unconfined_u:unconfined_r?
    role system_r types unconfined_mount_t;
')

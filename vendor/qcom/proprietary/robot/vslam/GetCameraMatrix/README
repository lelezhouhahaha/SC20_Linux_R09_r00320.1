- this is a sample code to convert the camera calibration result
  generated by a tool provided by QTI to YAML format which can be
  used for vSLAM.
- dependence: OpenCV 3.1.0 or above
- this sample code was just verified on Ubuntu, it should be work
  for Windows as well.


- A camera calibration result looks like:

Camera num: 0
Camera_type: 1
Camera_FOV: 166
Camera_size: 640 x 480
Camera_version: 0
Intrinsics:
fx:(in pixels),fy:(in pixels),cx:(in pixels),cy:(in pixels),alpha
280.789 281.451 325.719 230.979 0.000
Distortions :
Distortions K1:
1.000000	0.000000	-0.011313	0.000000	0.027444	0.000000	-0.023520	0.000000	0.007211
Distortions K2:
0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000
Distortions P:
0.000000	0.000000	0.000000
Camera pose rotations (in radians):
Rx:,Ry:,Rz:
0.000 0.000 0.000
Camera pose translations (in mm):
Tx:,Ty:,Tz:
0.000 0.000 0.000


- the output of this tool looks like:

%YAML:1.0
camera_name: calib_result
image_width: 640
image_height: 480
distortion_model: fisheye
camera_matrix:
   rows: 3
   cols: 3
   data: [ 2.8078899999999999e+02, 0., 3.2571899999999999e+02, 0.,
       2.8145100000000002e+02, 2.3097900000000001e+02, 0., 0., 1. ]
distortion_coefficients:
   rows: 1
   cols: 4
   data: [ -1.1313000000000000e-02, 2.7444000000000000e-02,
       -2.3519999999999999e-02, 7.2110000000000004e-03 ]
rectification_matrix:
   rows: 3
   cols: 3
   data: [ 1., 0., 0., 0., 1., 0., 0., 0., 1. ]
projection_matrix:
   rows: 3
   cols: 4
   data: [ 2.0928372174935376e+02, 0., 3.4509315952530477e+02, 0., 0.,
       2.0928372174935376e+02, 2.2434782077131044e+02, 0., 0., 0., 1.,
       0. ]
project_image_width: 640
project_image_height: 480


- steps to compile on Ubuntu:

1) download OpenCV 3.1.0, see https://www.opencv.org/
2) follow the guide to compile OpenCV, see https://docs.opencv.org/master/d7/d9f/tutorial_linux_install.html
3) change the OpenCV_DIR in CMakeLists.txt, for example, "set(OpenCV_DIR "/usr/share/opencv/opencv-3.1.0/build")"
4) cd GetCameraMatrix
5) mkdir build
6) cmake ../
7) make
8) run the application: ./GetCameraMatrix calib_result.txt  [frame.jpg]
9) it will see a *.yaml file is generated, that's the result

